
' ' are used to ease skimming. 

-----------------------------
----- WORKING WITH TERMINAL -----
-----------------------------
tmux:
  $'tmux' - open a new tmux session
  $'`' and then:
    $'`' - go to the prev window
    $'n' - go to nth window
    $'c' - open new window
    $',' - rename cur window
    $'&' - kill window (=$'exit') 
    $'%' - horizontal split
    $'"' - vertical split

-----------------------------
----- WORKING WITH FILES -----
-----------------------------
cd:
  $'cd -' - go back to the prev working dir 
  $'cd ~' - go to the home dir
  $'cd /' - go to the root dir

ls:
  $'ls dir1/ dir2/ dir3/' - show contents of all directories at once

head -n x <file> - show first n lines of <file>
tail -n x <file> - show last n lines of <file>

cp:
  $'cp' <item1> <item2> - copy item1 into item2
  $'cp' <item1..> <dir> - copy items into dir

mv:
  $'mv' <item1> <item2> - copy item1 into item2
  $'mv' <item1..> <dir> - copy items into dir

rm:
  $'rm' <item> - delete <item>
  $'rm' -r <dir> - delete <dir> recursively 

pwd:
  $'pwd' - print name of cur. working directory

file, type, which, man, info:
  $'file' <file>
  $'type' <command>
  $'which' <command> - display an executable location of <command>
  $'man' <command> - display a manual page of <command> 
  $'info' <command> - display a information page of <command> 

chmod:
  $'chmod' <mode change> <file> - change permissions of <file> according to <mode change>
    <mode change>
      octal representation:
        000 (octal) => 000 000 000 (binary) => --- --- --- (final)
        600 (octal) => 110 000 000 (binary) => rw- --- --- (final)
        777 (octal) => 111 111 111 (binary) => rwe rwe rwe (final)
      symbolic representation:
        look up 
  $'chmod' 777 <file> - add read/write/executive permission to owner, group and world
  $'chmod' +x <file> - add executive permission to owner, group and world

locate:
  $'locate' <pathname> - search database for <pathname>

find:
  $'find' <file> - search cur working directory and subdirectories 
  $'find' ./ -type f -name "*.jpg" -size +1M - search working directory and subdirectories for 'regular file' with '.jpg' and size > 1 megabytes

-----------------------------
----- WORKING WITH I/O -----
-----------------------------

> - redirect and rewrite destination file anew
>> - redirect and append
| - pipeline operator

cat:
  $'cat' <file..> - read file(s) and copy them to standard output

sort:
  $'sort' - take input, sort it and produce output

grep:
  $'grep' <pattern> <file..> - display lines matching <pattern> in <file>

wc:
  $'wc' <file> - display lines, words, and bytes contained in <file>

head, tail:
  $'head' -n x <file> - display first x lines of <file>

echo:
  $'echo' <file/text/etc> - display a line of text


-----------------------------
----- WORKING WITH PROCESSES -----
-----------------------------
ps:
  $'ps' - report a snapshot of cur processes

top, jobs:
  $'top' - display tasks
  $'jobs' - display active jobs




